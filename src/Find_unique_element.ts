function findUnique(k:number, arr: number[]): number {
    const freqMap: Map<number, number> = new Map()
    for (const ele of arr) {
        freqMap.set(ele, (freqMap.get(ele) || 0) + 1)
    }   
    let unique = 0
    for (const [key, value] of freqMap) {     
        if(value !== k) {
            unique = key;
            break;}
    }
    return unique
    
    
}
const str:string = "4 54 122 15 199 15 199 82 86 86 93 199 98 86 144 86 4 4 54 159 98 98 98 54 15 15 4 162 86 146 131 131 82 131 98 15 4 98 93 146 146 102 122 146 131 199 122 54 93 199 86 199 131 86 93 102 146 98 102 146 93 86 93 15 144 144 199 102 102 54 86 15 199 146 131 199 122 98 144 122 15 15 199 86 131 146 82 131 82 4 102 131 98 144 102 4 82 82 54 146 146 98 54 146 82 131 82 144 131 146 15 86 86 54 93 4 144 102 82 122 144 131 98 15 199 144 122 15 93 199 122 122 144 86 4 82 54 162 4 199 93 162 122 146 15 162 4 144 86 4 131 122 93 199 82 144 4 86 122 98 102 102 162 131 93 144 146 98 131 93 144 146 86 144 86 54 93 93 162 162 122 162 131 4 4 102 4 122 86 54 144 15 199 131 93 102 93 82 54 54 162 98 144 102 4 102 146 15 15 98 102 146 82 199 144 86 98 15 144 93 54 131 199 146 15 146 102 15 162 146 102 131 4 15 122 102 98 86 122 54 93 4 86 98 162 93 146 131 144 54 146 102 82 98 146 98 82 4 144 102 15 98 199 144 15 146 98 146 93 199 98 146 82 199 86 93 144 131 15 54 131 199 146 122 199 54 15 131 4 98 146 86 199 15 82 144 199 162 82 93 146 4 162 93 102 199 4 122 54 131 199 199 102 98 199 4 15 98 86 82 102 122 146 144 131 86 98 162 122 93 86 131 146 146 98 82 102 86 199 54 93 199 144 86 131 15 131 93 98 144 15 93 54 144 122 93 82 86 131 15 86 54 122 199 54 4 122 199 15 146 54 54 146 162 4 82 146 144 86 4 144 102 82 15 82 131 146 144 82 144 98 93 162 54 4 102 54 162 102 93 4 15 131 199 122 82 15 144 122 4 146 4 4 162 144 144 146 4 146 86 102 122 162 4 82 146 4 15 146 146 82 199 162 15 93 82 86 199 15 4 86 122 54 15 54 15 162 144 93 86 199 93 86 162 102 199 162 54 4 131 131 93 102 86 199 54 102 15 102 199 93 54 144 82 86 86 82 15 146 86 82 98 199 93 131 54 146 93 146 102 102 162 86 4 146 98 93 102 146 162 144 146 162 93 162 122 98 122 102 199 86 54 146 122 82 93 82 199 162 102 122 54 199 93 86 102 162 162 102 15 102 98 144 82 144 93 54 102 146 122 54 82 131 131 54 144 146 93 93 122 4 4 93 122 86 162 122 4 131 162 144 4 146 15 93 144 131 98 122 131 82 162 54 122 4 162 98 162 146 86 199 93 144 82 199 162 199 54 54 82 54 102 54 162 98 54 4 93 144 162 98 199 199 102 82 86 122 131 102 4 4 162 82 146 15 15 162 131 131 54 15 93 54 82 122 86 122 4 146 144 93 15 144 4 144 93 15 93 15 146 4 15 86 146 146 86 98 98 54 131 199 93 82 4 146 146 146 144 86 82 144 86 93 199 86 15 86 4 86 144 4 82 199 146 86 4 146 82 144 98 54 93 144 131 144 122 98 54 82 86 146 122 144 162 54 199 98 15 146 54 15 15 146 144 54 146 98 102 4 4 82 131 199 4 98 199 144 199 199 86 146 4 199 93 4 122 54 122 86 199 131 4 162 144 4 54 82 15 146 146 144 98 102 199 162 15 122 122 86 86 86 131 82 102 86 98 82 162 82 102 131 98 82 15 122 54 122 82 131 93 86 131 131 199 4 199 131 98 86 54 199 15 82 93 4 86 86 144 54 131 82 86 199 144 131 82 54 86 146 102 122 86 93 15 146 199 54 4 93 86 199 162 131 86 199 131 86 146 162 93 146 98 4 98 54 144 4 15 54 82 131 162 15 122 98 4 93 199 131 122 162 122 199 93 144 144 4 146 54 93 93 162 146 146 162 98 54 98 162 98 199 146 102 131 82 98 144 54 98 199 122 86 122 4 93 199 98 98 54 15 102 122 144 98 102 199 199 131 144 93 54 4 54 162 98 131 15 15 102 98 98 86 146 93 93 146 146 144 102 93 4 199 82 4 144 86 122 98 102 144 199 54 102 122 162 131 93 102 144 15 144 131 199 93 82 54 86 4 98 162 131 144 98 144 102 102 102 162 199 98 4 102 82 162 4 122 54 102 131 162 82 144 4 146 54 162 144 98 86 15 162 199 122 93 4 146 131 162 82 93 144 93 15 162 86 199 162 82 82 131 146 102 131 54 162 82 86 4 102 122 131 162 162 93 199 102 162 86 144 144 144 82 93 199 131 93 162 93 54 93 102 122 102 102 82 98 102 122 146 131 54 199 199 98 54 54 162 15 4 102 15 15 131 199 86 131 144 162 86 98 199 199 54 98 122 146 54 131 144 4 199 199 131 15 86 131 4 82 102 15 86 93 199 131 82 54 144 146 82 98 86 102 86 86 15 146 93 86 162 15 131 162 15 122 15 54 15 15 86 102 122 4 122 82 122 15 86 102 162 146 131 98 15 102 82 162 54 54 122 199 131 162 199 93 131 98 82 146 146 131 93 199 131 102 144 146 122 162 102 162 54 54 144 146 144 162 122 199 82 146 98 122 15 144 15 131 86 102 122 4 98 15 93 4 122 54 122 162 122 199 93 15 15 162 199 86 4 54 122 98 146 98 54 146 122 162 86 93 144 162 144 146 131 82 86 131 144 93 144 82 131 15 86 15 144 93 98 98 54 131 15 102 82 4 162 82 102 86 15 4 15 122 98 146 146 144 144 54 82 122 98 162 82 162 146 146 162 102 54 98 93 82 122 144 86 93 82 162 144 122 93 131 82 102 54 146 102 131 86 93 54 82 102 162 86 93 199 98 144 102 98 199 86 162 102 86 4 131 146 146 4 93 86 4 144 122 122 54 82 199 82 54 199 86 82 93 144 86 15 86 82 144 122 102 144 4 131 122 144 146 4 199 4 131 93 131 122 131 122 15 82 54 131 131 82 146 199 144 82 102 93 86 86 98 86 146 98 144 4 102 54 82 4 86 82 15 86 122 144 54 98 131 93 122 144 54 4 102 144 144 102 144 98 122 98 162 131 162 98 102 146 15 98 122 86 4 144 82 93 146 144 98 144 102 82 82 15 144 102 122 146 98 82 15 146 162 131 102 86 131 82 146 102 131 86 131 86 102 98 146 54 122 162 54 54 162 86 199 4 146 131 98 102 98 146 4 199 54 82 131 102 98 144 54 122 131 82 146 93 144 82 122 98 15 199 122 86 15 15 15 93 82 199 144 146 98 199 4 199 102 86 162 146 199 146 199 54 162 102 146 199 102 102 93 162 86 146 102 131 131 199 162 54 15 4 162 4 15 162 54 98 93 93 4 144 122 199 54 144 82 86 4 122 146 15 102 93 162 93 122 98 4 4 4 93 122 122 122 82 162 82 199 122 162 98 98 131 86 162 93 131 86 15 162 144 86 131 86 15 144 122 144 122 98 98 54 162 86 82 131 98 82 98 86 54 54 93 15 15 102 93 98 199 4 98 146 4 4 4 54 199 131 54 4 86 146 144 15 162 146 15 15 146 162 162 82 199 144 102 131 144 122 82 131 54 102 98 93 102 131 98 131 144 86 122 102 102 4 98 86 146 162 93 54 162 54 122 131 93 93 162 86 98 122 144 122 162 162 199 54 82 146 144 199 146 122 82 102 82 86 199 98 162 131 146 102 199 82 54 15 144 93 122 122 199 162 82 102 93 102 54 82 54 4 15 131 199 4 162 162 144 102 162 15 4 54 93 54 98 102 131 4 15 102 93 102 122 102 4 131 98 15 162 54 98 54 86 102 93 4 15 15 199 146 144 162 144 162 98 131 146 82 144 54 93 93 4 131 82 54 4 4 4 146 54 82 98 98 15 54 162 102 144 86 162 4 15 122 93 15 82 54 54 146 199 131 86 144 93 144 102 144 98 93 93 93 144 82 131 86 162 54 86 4 146 122 102 102 98 54 199 122 131 54 15 54 4 82 98 54 54 93 15 144 98 82 199 102 122 4 15 15 131 122 122 93 131 102 82 122 15 86 122 199 4 146 93 131 122 93 98 102 54 98 199 122 102 15 122 102 54 86 15 144 199 199 146 102 199 102 146 4 162 82 82 54 162 98 4 131 199 102 15 4 146 199 146 122 15 15 54 122 102 54 4 102 98 54 82 144 162 86 54 144 86 4 144 54 102 162 199 54 15 93 86 199 15 199 98 82 15 15 4 102 146 54 93 131 15 93 15 131 122 102 144 82 93 131 199 122 199 162 199 162 93 98 131 102 98 98 162 54 131 162 98 54 4 4 54 144 131 146 131 199 98 144 54 15 15 122 122 146 131 98 93 54 98 131 102 144 4 54 93 15 199 82 162 146 122 93 86 98 144 86 82 98 144 122 98 4 199 102 144 131 102 86 93 54 82 162 93 82 4 93 98 15 122 4 15 86 102 122 146 98 131 146 102 82 162 93 146 146 54 93 82 146 4 98 98 98 102 199 93 93 4 102 131 82 93 15 199 4 199 199 54 54 102 82 86 102 82 144 122 54 199 98 199 93 86 54 102 82 86 122 82 15 86 162 98 144 146 15 15 199 98 86 4 146 82 4 102 199 86 146 162 146 199 102 199 162 4 82 162 146 54 162 131 15 146 122 162 86 131 144 54 146 93 15 122 102 162 4 82 4 162 93 122 122 199 102 146 82 82 4 102 98 199 82 102 199 93 146 122 122 82 144 146 122 93 146 162 131 131 15 131 131 199 4 102 146 86 4 86 93 15 122 146 15 144 82 93 4 54 131 4 15 102 4 102 4 4 122 199 131 162 162 82 86 15 122 15 162 4 82 54 54 122 122 131 122 144 162 131 131 122 86 131 162 122 122 54 199 93 4 98 144 162 98 54 98 102 86 86 93 131 93 98 98 4 162 199 98 86 131 131 54 98 86 82 4 144 162 4 122 15 82 199 93 86 122 131 15 82 98 199 146 162 162 144 131 199 122 162 54 93 15 82 15 98 93 162 4 98 15 144 4 162 15 102 162 146 86 15 122 122 102 144 86 122 98 15 4 86 102 98 162 122 199 82 122 162 131 131 15 102 93 4 54 86 4 102 82 162 146 122 162 162 15 15 98 144 162 131 102 15 131 98 86 86 15 199 122 82 122 146 144 93 122 144 15 199 93 98 122 144 146 122 4 86 162 15 82 82 162 86 199 102 86 98 146 144 98 146 162 54 86 131 102 162 15 102 4 144 82 98 4 131 102 144 162 199 93 54 15 4 82 93 82 82 82 131 15 131 146 54 82 146 144 4 82 82 93 93 93 102 15 146 4 102 82 144 102 82 98 93 122 54 162 15 131 144 162 82 93 131 144 199 122 199 82 122 98 122 86 162 93 98 93 54 199 86 144 199 122 98 4 199 131 131"
    const newa = str.split(" ")
    const newaa = newa.map(ele => parseInt(ele))
findUnique(172, newaa)